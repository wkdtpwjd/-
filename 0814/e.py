# 중위표기식을 ->후위표기식으로 바꾸기
# 연산우선순위가 높은 애가 먼저 빠질 수 있도록
exp = '(6+5*(2-8)/2'
post_exp = ''
stack = []
# 우선순위를 비교하기 위한 딕셔너리 생성
# 괄호 때문에...괄호 처리를 위해서 우선순위표를 2개 만듭니다
# stack안에 있을때랑 밖에 있을떄랑 우선순위가 달라요 >> 괄호가
isp = {'*':2,'/':2,'+':1,'-':1,'(':0}   # 스택안에 있을때는 괄호안에 다른 연산자들 처리후 괄호가 사라져야 하므로 우선순위가 낮지만
icp = {'*':2,'/':2,'+':1,'-':1,'(':3}   # 스택에 들어가려고 할때 다른 연산자들 보다 괄호가 먼저 처리되어야 한다.



for c in exp:
    # 하나씩 읽어오기
    # 피연산자 vs 연산자 나누기
    # 피연산자는 출력
    # 연산자라면 우선순위에 따라서 스택에 넣거나 출력
    if c in '+-*/()': # 연산자다
        if c == ')':# 여는 괄호 만날때 까지 모조리 팝
         while stack[-1] != '(':
             post_exp += stack.pop()
        stack.pop() # 여는 괄호는 버리기
        continue



        # stack의 top의 연산자 보다 우선순위가 높으면
        elif isp[stack[-1]] < icp[c]:
            stack.append(c)
        else:   #같거나 높으면...스택에 있는애들 다뺼건데
                # 나보다 우선순위가 낮은애가 stack에 들어있으면 들어가면된다
                #계속 뺄건데 나보다 낮은 애가 top이 될때 까지 뺄거예요
            while stack and isp[stack[-1]] >= icp[c]:
                post_exp += stack.pop()
            stack.append(c)  #나보다 우선순위 높은애들은 다 출력했으니 push
    else : # 숫자라는 말이므로 즉 피연산자
        post_exp += c

